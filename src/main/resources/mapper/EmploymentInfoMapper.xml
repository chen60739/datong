<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.datong.dao.EmploymentInfoMapper">
  <resultMap id="BaseResultMap" type="com.example.datong.model.EmploymentInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="p_id" jdbcType="INTEGER" property="pId" />
    <result column="company_id" jdbcType="INTEGER" property="companyId" />
    <result column="contract_year" jdbcType="INTEGER" property="contractYear" />
    <result column="positional_title_id" jdbcType="INTEGER" property="positionalTitleId" />
    <result column="skill_id" jdbcType="INTEGER" property="skillId" />
    <result column="occupation" jdbcType="VARCHAR" property="occupation" />
  </resultMap>
  <resultMap id="superEmploymentInfo" type="com.example.datong.dto.SuperEmploymentInfo" extends="BaseResultMap">
    <association property="companyRegistrationInfo" javaType="com.example.datong.model.CompanyRegistrationInfo">
      <id column="unit_id" jdbcType="INTEGER" property="unitId" />
      <result column="unit_name" jdbcType="VARCHAR" property="unitName" />
      <result column="unit_phone" jdbcType="CHAR" property="unitPhone" />
      <result column="password" jdbcType="VARCHAR" property="password" />
      <result column="unit_county_code" jdbcType="VARCHAR" property="unitCountyCode" />
      <result column="unit_town_code" jdbcType="VARCHAR" property="unitTownCode" />
      <result column="unit_type_id" jdbcType="INTEGER" property="unitTypeId" />
      <result column="unit_address" jdbcType="VARCHAR" property="unitAddress" />
      <result column="unit_num" jdbcType="VARCHAR" property="unitNum" />
      <result column="unit_social" jdbcType="VARCHAR" property="unitSocial" />
      <result column="industry_category_id" jdbcType="INTEGER" property="industryCategoryId" />
      <result column="organization_code" jdbcType="VARCHAR" property="organizationCode" />
      <result column="legal_person_name" jdbcType="VARCHAR" property="legalPersonName" />
      <result column="worker_num" jdbcType="VARCHAR" property="workerNum" />
      <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
      <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
      <result column="is_checked" jdbcType="INTEGER" property="isChecked" />
    </association>
  </resultMap>
  <sql id="Base_Column_List">
    id, p_id, company_id, contract_year, positional_title_id, skill_id, occupation
  </sql>
  <select id="selectEmploymentInfo" resultMap="superEmploymentInfo" parameterType="java.lang.Integer">
    SELECT * FROM
		employment_info e LEFT JOIN company_registration_info cri on
		e.company_id=cri.unit_id
		 where e.p_id=#{id}
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employment_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from employment_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.datong.model.EmploymentInfo">
    insert into employment_info (p_id, company_id,
      contract_year, positional_title_id, skill_id, 
      occupation)
    values (#{pId,jdbcType=INTEGER}, #{companyId,jdbcType=INTEGER},
      #{contractYear,jdbcType=INTEGER}, #{positionalTitleId,jdbcType=INTEGER}, #{skillId,jdbcType=INTEGER}, 
      #{occupation,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.datong.model.EmploymentInfo">
    insert into employment_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="pId != null">
        p_id,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="contractYear != null">
        contract_year,
      </if>
      <if test="positionalTitleId != null">
        positional_title_id,
      </if>
      <if test="skillId != null">
        skill_id,
      </if>
      <if test="occupation != null">
        occupation,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="pId != null">
        #{pId,jdbcType=INTEGER},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="contractYear != null">
        #{contractYear,jdbcType=INTEGER},
      </if>
      <if test="positionalTitleId != null">
        #{positionalTitleId,jdbcType=INTEGER},
      </if>
      <if test="skillId != null">
        #{skillId,jdbcType=INTEGER},
      </if>
      <if test="occupation != null">
        #{occupation,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.datong.model.EmploymentInfo">
    update employment_info
    <set>
      <if test="pId != null">
        p_id = #{pId,jdbcType=INTEGER},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="contractYear != null">
        contract_year = #{contractYear,jdbcType=INTEGER},
      </if>
      <if test="positionalTitleId != null">
        positional_title_id = #{positionalTitleId,jdbcType=INTEGER},
      </if>
      <if test="skillId != null">
        skill_id = #{skillId,jdbcType=INTEGER},
      </if>
      <if test="occupation != null">
        occupation = #{occupation,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.datong.model.EmploymentInfo">
    update employment_info
    set p_id = #{pId,jdbcType=INTEGER},
      company_id = #{companyId,jdbcType=INTEGER},
      contract_year = #{contractYear,jdbcType=INTEGER},
      positional_title_id = #{positionalTitleId,jdbcType=INTEGER},
      skill_id = #{skillId,jdbcType=INTEGER},
      occupation = #{occupation,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>